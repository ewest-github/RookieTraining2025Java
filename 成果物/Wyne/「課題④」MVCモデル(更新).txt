MVC(Model View Controller)モデルとはWebシステム開発によく用いられるプログラムの処理を役割ごとに分ける考えです。
Modelはデータ処理、Viewは画面表示、Controllerは制御を担当し、それぞれの役割によって開発効率や可能性が向上します。
M,V,Cの役割は
Modelは、データベースとデータのやり取りを行う
Viewは、ユーザがPCやスマートフォンなどで目にする画面にあたる、ユーザインタフェース部分の処理を行う。
Controllerは、ViewとModelの動作を制御し、自身は画面表示やロジックの実行はせず、クライアントからの入力に応じて、必要なロジックの実行をModelに指示し、その結果の表示をViewに表示するなどを行う。
流れ
1．クライアントが送ったリクエストをControllerが受け付ける
２．ControllerがModelに処理の実行を指示する
3．指示を受けたModelが処理結果をControllerに送信する
4．ControllerがViewに表示の実行を指示する
5．Viewが画面表示する（レスポンス）

デメリット
MVCモデルは機能ごとに開発を分けるため、それぞれの機能を書き分ける必要があるため、場合によってはかえって、時間がかかってしまう場合もあります。さらに、機能拡張により、データベースとのやり取りやデータ変換を行う Model 部分やその仲介をする  Controller 部分に負担がかかることで、処理速度が遅くなってしまう可能性があります。また、Controller から Model への指示が増大しすぎることで、Model の Controller への依存度が高くなってしまい、MVCモデルのメリットである機能ごとの独立性が保てなくなる恐れがあります。

登場人物
・あなた　➡View （ほしい情報を入力する）
・シェフ（調理する人）➡Model（コントローラから受け取った指示通り、処理する）
・料理　➡データ　（モデルが処理した結果）
・ウェイター（注文を受ける人）➡Controller（処理の結果を画面に表示する）
